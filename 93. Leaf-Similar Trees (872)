/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> node1,node2;
        simleaf(root1, node1);
        simleaf(root2, node2);
        return node1==node2;
    }
    void simleaf(TreeNode* root, vector<int>& node){
        if(!root) return;
        if(!root->left && !root->right) {
            node.push_back(root->val);
            return;
        }
        simleaf(root->left, node);
        simleaf(root->right, node);
    }

};
