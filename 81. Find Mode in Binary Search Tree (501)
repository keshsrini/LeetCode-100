/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> findMode(TreeNode* root) {
        unordered_map<int,int>mp;
        int m=0;
        solve(root,mp);
        vector<int>k;
        for (auto &it:mp){
            if (it.second>m){m=it.second;k.clear();}
            if (it.second==m){k.push_back(it.first);}
        }return k;
    }
    void solve(TreeNode* root, unordered_map<int,int>&mp){
        if (root==NULL){return;}
        mp[root->val]++;
        solve(root->left,mp);
        solve(root->right,mp);
    }
};
