class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> templist;
        backtrack(res,templist,nums);
        return res;
    }
private:
    void backtrack(vector<vector<int>>& res, vector<int>& templist, vector<int>& nums) {
        if (templist.size()==nums.size()) {
            res.push_back(templist);
            return;
        }
        for(int i=0;i<nums.size();i++) {
            if (find(templist.begin(),templist.end(),nums[i])!=templist.end()) {
                continue;
            }
            templist.push_back(nums[i]);
            backtrack(res,templist,nums);
            templist.pop_back();
        }
    }
};
